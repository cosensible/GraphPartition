// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GraphPartition.proto

#include "GraphPartition.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_GraphPartition_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GraphPartition_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GraphPartition_Edge;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_GraphPartition_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GraphPartition_Node;
}  // namespace protobuf_GraphPartition_2eproto
namespace pb {
class GraphPartition_InputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GraphPartition_Input>
      _instance;
} _GraphPartition_Input_default_instance_;
class GraphPartition_OutputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GraphPartition_Output>
      _instance;
} _GraphPartition_Output_default_instance_;
class GraphPartition_NodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GraphPartition_Node>
      _instance;
} _GraphPartition_Node_default_instance_;
class GraphPartition_EdgeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GraphPartition_Edge>
      _instance;
} _GraphPartition_Edge_default_instance_;
class GraphPartitionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GraphPartition>
      _instance;
} _GraphPartition_default_instance_;
class SubmissionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Submission>
      _instance;
} _Submission_default_instance_;
}  // namespace pb
namespace protobuf_GraphPartition_2eproto {
static void InitDefaultsGraphPartition_Input() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_GraphPartition_Input_default_instance_;
    new (ptr) ::pb::GraphPartition_Input();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::GraphPartition_Input::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_GraphPartition_Input =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsGraphPartition_Input}, {
      &protobuf_GraphPartition_2eproto::scc_info_GraphPartition_Node.base,
      &protobuf_GraphPartition_2eproto::scc_info_GraphPartition_Edge.base,}};

static void InitDefaultsGraphPartition_Output() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_GraphPartition_Output_default_instance_;
    new (ptr) ::pb::GraphPartition_Output();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::GraphPartition_Output::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GraphPartition_Output =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGraphPartition_Output}, {}};

static void InitDefaultsGraphPartition_Node() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_GraphPartition_Node_default_instance_;
    new (ptr) ::pb::GraphPartition_Node();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::GraphPartition_Node::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GraphPartition_Node =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGraphPartition_Node}, {}};

static void InitDefaultsGraphPartition_Edge() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_GraphPartition_Edge_default_instance_;
    new (ptr) ::pb::GraphPartition_Edge();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::GraphPartition_Edge::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GraphPartition_Edge =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGraphPartition_Edge}, {}};

static void InitDefaultsGraphPartition() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_GraphPartition_default_instance_;
    new (ptr) ::pb::GraphPartition();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::GraphPartition::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GraphPartition =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGraphPartition}, {}};

static void InitDefaultsSubmission() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_Submission_default_instance_;
    new (ptr) ::pb::Submission();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::Submission::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Submission =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSubmission}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GraphPartition_Input.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GraphPartition_Output.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GraphPartition_Node.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GraphPartition_Edge.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GraphPartition.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Submission.base);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GraphPartition_Input, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GraphPartition_Input, nodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GraphPartition_Input, edges_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GraphPartition_Output, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GraphPartition_Output, nodepart_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GraphPartition_Node, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GraphPartition_Node, wgt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GraphPartition_Edge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GraphPartition_Edge, beg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GraphPartition_Edge, end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GraphPartition_Edge, wgt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::GraphPartition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, problem_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, instance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, partnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, obj_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, imbalance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::pb::Submission, duration_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::GraphPartition_Input)},
  { 7, -1, sizeof(::pb::GraphPartition_Output)},
  { 13, -1, sizeof(::pb::GraphPartition_Node)},
  { 19, -1, sizeof(::pb::GraphPartition_Edge)},
  { 27, -1, sizeof(::pb::GraphPartition)},
  { 32, -1, sizeof(::pb::Submission)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_GraphPartition_Input_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_GraphPartition_Output_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_GraphPartition_Node_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_GraphPartition_Edge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_GraphPartition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pb::_Submission_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "GraphPartition.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024GraphPartition.proto\022\002pb\"\311\001\n\016GraphPart"
      "ition\032W\n\005Input\022&\n\005nodes\030\001 \003(\0132\027.pb.Graph"
      "Partition.Node\022&\n\005edges\030\002 \003(\0132\027.pb.Graph"
      "Partition.Edge\032\032\n\006Output\022\020\n\010nodepart\030\001 \003"
      "(\005\032\023\n\004Node\022\013\n\003wgt\030\001 \001(\005\032-\n\004Edge\022\013\n\003beg\030\001"
      " \001(\005\022\013\n\003end\030\002 \001(\005\022\013\n\003wgt\030\003 \001(\005\"r\n\nSubmis"
      "sion\022\017\n\007problem\030\001 \001(\t\022\020\n\010instance\030\002 \001(\t\022"
      "\017\n\007partnum\030\003 \001(\005\022\013\n\003obj\030\013 \001(\005\022\021\n\timbalan"
      "ce\030\014 \001(\001\022\020\n\010duration\030\r \001(\tB\024\n\002pbB\016GraphP"
      "artitionb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 376);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GraphPartition.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GraphPartition_2eproto
namespace pb {

// ===================================================================

void GraphPartition_Input::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphPartition_Input::kNodesFieldNumber;
const int GraphPartition_Input::kEdgesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphPartition_Input::GraphPartition_Input()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GraphPartition_2eproto::scc_info_GraphPartition_Input.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.GraphPartition.Input)
}
GraphPartition_Input::GraphPartition_Input(const GraphPartition_Input& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodes_(from.nodes_),
      edges_(from.edges_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.GraphPartition.Input)
}

void GraphPartition_Input::SharedCtor() {
}

GraphPartition_Input::~GraphPartition_Input() {
  // @@protoc_insertion_point(destructor:pb.GraphPartition.Input)
  SharedDtor();
}

void GraphPartition_Input::SharedDtor() {
}

void GraphPartition_Input::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GraphPartition_Input::descriptor() {
  ::protobuf_GraphPartition_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GraphPartition_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GraphPartition_Input& GraphPartition_Input::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GraphPartition_2eproto::scc_info_GraphPartition_Input.base);
  return *internal_default_instance();
}


void GraphPartition_Input::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.GraphPartition.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  edges_.Clear();
  _internal_metadata_.Clear();
}

bool GraphPartition_Input::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.GraphPartition.Input)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.GraphPartition.Node nodes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.GraphPartition.Edge edges = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_edges()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.GraphPartition.Input)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.GraphPartition.Input)
  return false;
#undef DO_
}

void GraphPartition_Input::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.GraphPartition.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.GraphPartition.Node nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->nodes(static_cast<int>(i)),
      output);
  }

  // repeated .pb.GraphPartition.Edge edges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->edges_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->edges(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.GraphPartition.Input)
}

::google::protobuf::uint8* GraphPartition_Input::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.GraphPartition.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.GraphPartition.Node nodes = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nodes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->nodes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .pb.GraphPartition.Edge edges = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->edges_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->edges(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GraphPartition.Input)
  return target;
}

size_t GraphPartition_Input::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.GraphPartition.Input)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pb.GraphPartition.Node nodes = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->nodes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nodes(static_cast<int>(i)));
    }
  }

  // repeated .pb.GraphPartition.Edge edges = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->edges_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->edges(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphPartition_Input::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.GraphPartition.Input)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphPartition_Input* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphPartition_Input>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.GraphPartition.Input)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.GraphPartition.Input)
    MergeFrom(*source);
  }
}

void GraphPartition_Input::MergeFrom(const GraphPartition_Input& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.GraphPartition.Input)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  edges_.MergeFrom(from.edges_);
}

void GraphPartition_Input::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.GraphPartition.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphPartition_Input::CopyFrom(const GraphPartition_Input& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.GraphPartition.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphPartition_Input::IsInitialized() const {
  return true;
}

void GraphPartition_Input::Swap(GraphPartition_Input* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraphPartition_Input::InternalSwap(GraphPartition_Input* other) {
  using std::swap;
  CastToBase(&nodes_)->InternalSwap(CastToBase(&other->nodes_));
  CastToBase(&edges_)->InternalSwap(CastToBase(&other->edges_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GraphPartition_Input::GetMetadata() const {
  protobuf_GraphPartition_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GraphPartition_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GraphPartition_Output::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphPartition_Output::kNodepartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphPartition_Output::GraphPartition_Output()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GraphPartition_2eproto::scc_info_GraphPartition_Output.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.GraphPartition.Output)
}
GraphPartition_Output::GraphPartition_Output(const GraphPartition_Output& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nodepart_(from.nodepart_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.GraphPartition.Output)
}

void GraphPartition_Output::SharedCtor() {
}

GraphPartition_Output::~GraphPartition_Output() {
  // @@protoc_insertion_point(destructor:pb.GraphPartition.Output)
  SharedDtor();
}

void GraphPartition_Output::SharedDtor() {
}

void GraphPartition_Output::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GraphPartition_Output::descriptor() {
  ::protobuf_GraphPartition_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GraphPartition_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GraphPartition_Output& GraphPartition_Output::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GraphPartition_2eproto::scc_info_GraphPartition_Output.base);
  return *internal_default_instance();
}


void GraphPartition_Output::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.GraphPartition.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodepart_.Clear();
  _internal_metadata_.Clear();
}

bool GraphPartition_Output::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.GraphPartition.Output)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 nodepart = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_nodepart())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_nodepart())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.GraphPartition.Output)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.GraphPartition.Output)
  return false;
#undef DO_
}

void GraphPartition_Output::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.GraphPartition.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 nodepart = 1;
  if (this->nodepart_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _nodepart_cached_byte_size_));
  }
  for (int i = 0, n = this->nodepart_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->nodepart(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.GraphPartition.Output)
}

::google::protobuf::uint8* GraphPartition_Output::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.GraphPartition.Output)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 nodepart = 1;
  if (this->nodepart_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _nodepart_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->nodepart_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GraphPartition.Output)
  return target;
}

size_t GraphPartition_Output::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.GraphPartition.Output)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 nodepart = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->nodepart_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _nodepart_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphPartition_Output::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.GraphPartition.Output)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphPartition_Output* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphPartition_Output>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.GraphPartition.Output)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.GraphPartition.Output)
    MergeFrom(*source);
  }
}

void GraphPartition_Output::MergeFrom(const GraphPartition_Output& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.GraphPartition.Output)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nodepart_.MergeFrom(from.nodepart_);
}

void GraphPartition_Output::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.GraphPartition.Output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphPartition_Output::CopyFrom(const GraphPartition_Output& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.GraphPartition.Output)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphPartition_Output::IsInitialized() const {
  return true;
}

void GraphPartition_Output::Swap(GraphPartition_Output* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraphPartition_Output::InternalSwap(GraphPartition_Output* other) {
  using std::swap;
  nodepart_.InternalSwap(&other->nodepart_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GraphPartition_Output::GetMetadata() const {
  protobuf_GraphPartition_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GraphPartition_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GraphPartition_Node::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphPartition_Node::kWgtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphPartition_Node::GraphPartition_Node()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GraphPartition_2eproto::scc_info_GraphPartition_Node.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.GraphPartition.Node)
}
GraphPartition_Node::GraphPartition_Node(const GraphPartition_Node& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  wgt_ = from.wgt_;
  // @@protoc_insertion_point(copy_constructor:pb.GraphPartition.Node)
}

void GraphPartition_Node::SharedCtor() {
  wgt_ = 0;
}

GraphPartition_Node::~GraphPartition_Node() {
  // @@protoc_insertion_point(destructor:pb.GraphPartition.Node)
  SharedDtor();
}

void GraphPartition_Node::SharedDtor() {
}

void GraphPartition_Node::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GraphPartition_Node::descriptor() {
  ::protobuf_GraphPartition_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GraphPartition_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GraphPartition_Node& GraphPartition_Node::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GraphPartition_2eproto::scc_info_GraphPartition_Node.base);
  return *internal_default_instance();
}


void GraphPartition_Node::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.GraphPartition.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  wgt_ = 0;
  _internal_metadata_.Clear();
}

bool GraphPartition_Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.GraphPartition.Node)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 wgt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wgt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.GraphPartition.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.GraphPartition.Node)
  return false;
#undef DO_
}

void GraphPartition_Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.GraphPartition.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 wgt = 1;
  if (this->wgt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->wgt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.GraphPartition.Node)
}

::google::protobuf::uint8* GraphPartition_Node::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.GraphPartition.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 wgt = 1;
  if (this->wgt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->wgt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GraphPartition.Node)
  return target;
}

size_t GraphPartition_Node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.GraphPartition.Node)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 wgt = 1;
  if (this->wgt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphPartition_Node::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.GraphPartition.Node)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphPartition_Node* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphPartition_Node>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.GraphPartition.Node)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.GraphPartition.Node)
    MergeFrom(*source);
  }
}

void GraphPartition_Node::MergeFrom(const GraphPartition_Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.GraphPartition.Node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.wgt() != 0) {
    set_wgt(from.wgt());
  }
}

void GraphPartition_Node::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.GraphPartition.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphPartition_Node::CopyFrom(const GraphPartition_Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.GraphPartition.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphPartition_Node::IsInitialized() const {
  return true;
}

void GraphPartition_Node::Swap(GraphPartition_Node* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraphPartition_Node::InternalSwap(GraphPartition_Node* other) {
  using std::swap;
  swap(wgt_, other->wgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GraphPartition_Node::GetMetadata() const {
  protobuf_GraphPartition_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GraphPartition_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GraphPartition_Edge::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphPartition_Edge::kBegFieldNumber;
const int GraphPartition_Edge::kEndFieldNumber;
const int GraphPartition_Edge::kWgtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphPartition_Edge::GraphPartition_Edge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GraphPartition_2eproto::scc_info_GraphPartition_Edge.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.GraphPartition.Edge)
}
GraphPartition_Edge::GraphPartition_Edge(const GraphPartition_Edge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&beg_, &from.beg_,
    static_cast<size_t>(reinterpret_cast<char*>(&wgt_) -
    reinterpret_cast<char*>(&beg_)) + sizeof(wgt_));
  // @@protoc_insertion_point(copy_constructor:pb.GraphPartition.Edge)
}

void GraphPartition_Edge::SharedCtor() {
  ::memset(&beg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wgt_) -
      reinterpret_cast<char*>(&beg_)) + sizeof(wgt_));
}

GraphPartition_Edge::~GraphPartition_Edge() {
  // @@protoc_insertion_point(destructor:pb.GraphPartition.Edge)
  SharedDtor();
}

void GraphPartition_Edge::SharedDtor() {
}

void GraphPartition_Edge::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GraphPartition_Edge::descriptor() {
  ::protobuf_GraphPartition_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GraphPartition_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GraphPartition_Edge& GraphPartition_Edge::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GraphPartition_2eproto::scc_info_GraphPartition_Edge.base);
  return *internal_default_instance();
}


void GraphPartition_Edge::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.GraphPartition.Edge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&beg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wgt_) -
      reinterpret_cast<char*>(&beg_)) + sizeof(wgt_));
  _internal_metadata_.Clear();
}

bool GraphPartition_Edge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.GraphPartition.Edge)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 beg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 wgt = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wgt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.GraphPartition.Edge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.GraphPartition.Edge)
  return false;
#undef DO_
}

void GraphPartition_Edge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.GraphPartition.Edge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 beg = 1;
  if (this->beg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->beg(), output);
  }

  // int32 end = 2;
  if (this->end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->end(), output);
  }

  // int32 wgt = 3;
  if (this->wgt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->wgt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.GraphPartition.Edge)
}

::google::protobuf::uint8* GraphPartition_Edge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.GraphPartition.Edge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 beg = 1;
  if (this->beg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->beg(), target);
  }

  // int32 end = 2;
  if (this->end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->end(), target);
  }

  // int32 wgt = 3;
  if (this->wgt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->wgt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GraphPartition.Edge)
  return target;
}

size_t GraphPartition_Edge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.GraphPartition.Edge)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 beg = 1;
  if (this->beg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->beg());
  }

  // int32 end = 2;
  if (this->end() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->end());
  }

  // int32 wgt = 3;
  if (this->wgt() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wgt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphPartition_Edge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.GraphPartition.Edge)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphPartition_Edge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphPartition_Edge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.GraphPartition.Edge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.GraphPartition.Edge)
    MergeFrom(*source);
  }
}

void GraphPartition_Edge::MergeFrom(const GraphPartition_Edge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.GraphPartition.Edge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.beg() != 0) {
    set_beg(from.beg());
  }
  if (from.end() != 0) {
    set_end(from.end());
  }
  if (from.wgt() != 0) {
    set_wgt(from.wgt());
  }
}

void GraphPartition_Edge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.GraphPartition.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphPartition_Edge::CopyFrom(const GraphPartition_Edge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.GraphPartition.Edge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphPartition_Edge::IsInitialized() const {
  return true;
}

void GraphPartition_Edge::Swap(GraphPartition_Edge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraphPartition_Edge::InternalSwap(GraphPartition_Edge* other) {
  using std::swap;
  swap(beg_, other->beg_);
  swap(end_, other->end_);
  swap(wgt_, other->wgt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GraphPartition_Edge::GetMetadata() const {
  protobuf_GraphPartition_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GraphPartition_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GraphPartition::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphPartition::GraphPartition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GraphPartition_2eproto::scc_info_GraphPartition.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.GraphPartition)
}
GraphPartition::GraphPartition(const GraphPartition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.GraphPartition)
}

void GraphPartition::SharedCtor() {
}

GraphPartition::~GraphPartition() {
  // @@protoc_insertion_point(destructor:pb.GraphPartition)
  SharedDtor();
}

void GraphPartition::SharedDtor() {
}

void GraphPartition::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GraphPartition::descriptor() {
  ::protobuf_GraphPartition_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GraphPartition_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GraphPartition& GraphPartition::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GraphPartition_2eproto::scc_info_GraphPartition.base);
  return *internal_default_instance();
}


void GraphPartition::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.GraphPartition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GraphPartition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.GraphPartition)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.GraphPartition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.GraphPartition)
  return false;
#undef DO_
}

void GraphPartition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.GraphPartition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.GraphPartition)
}

::google::protobuf::uint8* GraphPartition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.GraphPartition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GraphPartition)
  return target;
}

size_t GraphPartition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.GraphPartition)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GraphPartition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.GraphPartition)
  GOOGLE_DCHECK_NE(&from, this);
  const GraphPartition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphPartition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.GraphPartition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.GraphPartition)
    MergeFrom(*source);
  }
}

void GraphPartition::MergeFrom(const GraphPartition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.GraphPartition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GraphPartition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.GraphPartition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphPartition::CopyFrom(const GraphPartition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.GraphPartition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GraphPartition::IsInitialized() const {
  return true;
}

void GraphPartition::Swap(GraphPartition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraphPartition::InternalSwap(GraphPartition* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GraphPartition::GetMetadata() const {
  protobuf_GraphPartition_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GraphPartition_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Submission::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Submission::kProblemFieldNumber;
const int Submission::kInstanceFieldNumber;
const int Submission::kPartnumFieldNumber;
const int Submission::kObjFieldNumber;
const int Submission::kImbalanceFieldNumber;
const int Submission::kDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Submission::Submission()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_GraphPartition_2eproto::scc_info_Submission.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Submission)
}
Submission::Submission(const Submission& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  problem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.problem().size() > 0) {
    problem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.problem_);
  }
  instance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instance().size() > 0) {
    instance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_);
  }
  duration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.duration().size() > 0) {
    duration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.duration_);
  }
  ::memcpy(&partnum_, &from.partnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&imbalance_) -
    reinterpret_cast<char*>(&partnum_)) + sizeof(imbalance_));
  // @@protoc_insertion_point(copy_constructor:pb.Submission)
}

void Submission::SharedCtor() {
  problem_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&partnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&imbalance_) -
      reinterpret_cast<char*>(&partnum_)) + sizeof(imbalance_));
}

Submission::~Submission() {
  // @@protoc_insertion_point(destructor:pb.Submission)
  SharedDtor();
}

void Submission::SharedDtor() {
  problem_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Submission::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Submission::descriptor() {
  ::protobuf_GraphPartition_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GraphPartition_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Submission& Submission::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_GraphPartition_2eproto::scc_info_Submission.base);
  return *internal_default_instance();
}


void Submission::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Submission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  problem_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  duration_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&partnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&imbalance_) -
      reinterpret_cast<char*>(&partnum_)) + sizeof(imbalance_));
  _internal_metadata_.Clear();
}

bool Submission::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Submission)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string problem = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_problem()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->problem().data(), static_cast<int>(this->problem().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.problem"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instance()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instance().data(), static_cast<int>(this->instance().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.instance"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 partnum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &partnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 obj = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &obj_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double imbalance = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &imbalance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string duration = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_duration()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->duration().data(), static_cast<int>(this->duration().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.Submission.duration"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Submission)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Submission)
  return false;
#undef DO_
}

void Submission::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Submission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string problem = 1;
  if (this->problem().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->problem().data(), static_cast<int>(this->problem().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.problem");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->problem(), output);
  }

  // string instance = 2;
  if (this->instance().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance().data(), static_cast<int>(this->instance().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.instance");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->instance(), output);
  }

  // int32 partnum = 3;
  if (this->partnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->partnum(), output);
  }

  // int32 obj = 11;
  if (this->obj() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->obj(), output);
  }

  // double imbalance = 12;
  if (this->imbalance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->imbalance(), output);
  }

  // string duration = 13;
  if (this->duration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->duration().data(), static_cast<int>(this->duration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.duration");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->duration(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Submission)
}

::google::protobuf::uint8* Submission::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Submission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string problem = 1;
  if (this->problem().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->problem().data(), static_cast<int>(this->problem().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.problem");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->problem(), target);
  }

  // string instance = 2;
  if (this->instance().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instance().data(), static_cast<int>(this->instance().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.instance");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->instance(), target);
  }

  // int32 partnum = 3;
  if (this->partnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->partnum(), target);
  }

  // int32 obj = 11;
  if (this->obj() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->obj(), target);
  }

  // double imbalance = 12;
  if (this->imbalance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->imbalance(), target);
  }

  // string duration = 13;
  if (this->duration().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->duration().data(), static_cast<int>(this->duration().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.Submission.duration");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->duration(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Submission)
  return target;
}

size_t Submission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Submission)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string problem = 1;
  if (this->problem().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->problem());
  }

  // string instance = 2;
  if (this->instance().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instance());
  }

  // string duration = 13;
  if (this->duration().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->duration());
  }

  // int32 partnum = 3;
  if (this->partnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->partnum());
  }

  // int32 obj = 11;
  if (this->obj() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->obj());
  }

  // double imbalance = 12;
  if (this->imbalance() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Submission::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Submission)
  GOOGLE_DCHECK_NE(&from, this);
  const Submission* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Submission>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Submission)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Submission)
    MergeFrom(*source);
  }
}

void Submission::MergeFrom(const Submission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Submission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.problem().size() > 0) {

    problem_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.problem_);
  }
  if (from.instance().size() > 0) {

    instance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instance_);
  }
  if (from.duration().size() > 0) {

    duration_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.duration_);
  }
  if (from.partnum() != 0) {
    set_partnum(from.partnum());
  }
  if (from.obj() != 0) {
    set_obj(from.obj());
  }
  if (from.imbalance() != 0) {
    set_imbalance(from.imbalance());
  }
}

void Submission::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Submission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Submission::CopyFrom(const Submission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Submission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Submission::IsInitialized() const {
  return true;
}

void Submission::Swap(Submission* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Submission::InternalSwap(Submission* other) {
  using std::swap;
  problem_.Swap(&other->problem_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instance_.Swap(&other->instance_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  duration_.Swap(&other->duration_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(partnum_, other->partnum_);
  swap(obj_, other->obj_);
  swap(imbalance_, other->imbalance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Submission::GetMetadata() const {
  protobuf_GraphPartition_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GraphPartition_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::GraphPartition_Input* Arena::CreateMaybeMessage< ::pb::GraphPartition_Input >(Arena* arena) {
  return Arena::CreateInternal< ::pb::GraphPartition_Input >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::GraphPartition_Output* Arena::CreateMaybeMessage< ::pb::GraphPartition_Output >(Arena* arena) {
  return Arena::CreateInternal< ::pb::GraphPartition_Output >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::GraphPartition_Node* Arena::CreateMaybeMessage< ::pb::GraphPartition_Node >(Arena* arena) {
  return Arena::CreateInternal< ::pb::GraphPartition_Node >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::GraphPartition_Edge* Arena::CreateMaybeMessage< ::pb::GraphPartition_Edge >(Arena* arena) {
  return Arena::CreateInternal< ::pb::GraphPartition_Edge >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::GraphPartition* Arena::CreateMaybeMessage< ::pb::GraphPartition >(Arena* arena) {
  return Arena::CreateInternal< ::pb::GraphPartition >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::pb::Submission* Arena::CreateMaybeMessage< ::pb::Submission >(Arena* arena) {
  return Arena::CreateInternal< ::pb::Submission >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
